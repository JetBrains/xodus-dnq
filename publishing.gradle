import java.time.Duration

if (project.hasProperty('ossrhUser') && project.hasProperty('ossrhPassword')) {

    // https://github.com/Codearte/gradle-nexus-staging-plugin to close and promote from Nexus staging to maven central
    nexusStaging {
        username = ossrhUser
        password = ossrhPassword
        delayBetweenRetriesInMillis = 30000
        stagingProfileId = '89ee7caa6631c4'
    }

    subprojects {
        apply plugin: 'signing'
        apply plugin: 'de.marcphilipp.nexus-publish'

        publishing {
            publications {
                mavenJava(MavenPublication) {
                    from components.java
                    artifact(sourceJar) {
                        classifier = 'sources'
                    }
                    artifact(javadocJar) {
                        classifier = 'javadoc'
                    }
                    pom {
                        name = project.name
                        description = 'Data definition and queries Kotlin DSL over Xodus'
                        url = 'https://github.com/JetBrains/xodus-dnq'
                        licenses {
                            license {
                                name = 'Apache 2.0'
                                url = 'https://www.apache.org/licenses/'
                                distribution = 'repo'
                            }
                        }
                        developers {
                            developer {
                                id = 'JetBrains'
                                name = 'JetBrains Team'
                                organization = 'JetBrains s.r.o'
                                organizationUrl = 'https://www.jetbrains.com'
                            }
                        }
                        scm {
                            connection = 'scm:git:https://github.com/JetBrains/xodus-dnq.git'
                            developerConnection = 'scm:git@github.com:JetBrains/xodus-dnq.git'
                            url = 'https://github.com/JetBrains/xodus-dnq'
                        }
                    }
                }
            }
            repositories {
                maven {
                    url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
                    credentials {
                        username ossrhUser
                        password ossrhPassword
                    }
                }
            }
        }

        signing {
            sign publishing.publications.mavenJava
        }

        /**
         * https://github.com/marcphilipp/nexus-publish-plugin to avoid https://github.com/Codearte/gradle-nexus-staging-plugin/issues/77
         * which is relevant for TeamCity as well. publishMavenJavaPublicationToNexusRepository task is recommended, since
         * publishToNexus produces duplicates in Nexus staging.
         */
        nexusPublishing {
            repositories {
                sonatype {
                    packageGroup = rootProject.nexusStaging.packageGroup
                    username = rootProject.nexusStaging.username
                    password = rootProject.nexusStaging.password
                    clientTimeout = Duration.ofMinutes(5)
                    connectTimeout = Duration.ofMinutes(5)
                }
            }
        }
    }
}

// publish snapshot versions to any repo you'd like to see them in
if (project.hasProperty("publishTo")) {
    subprojects {
        apply plugin: 'maven-publish'

        publishing {
            repositories {
                maven {
                    url project.publishTo
                    if (project.hasProperty("publishUsername")) {
                        credentials {
                            username = project.publishUsername
                            password = project.publishPassword
                        }
                    }
                }
            }
            publications {
                mavenJava(MavenPublication) {
                    from components.java

                    artifact sourceJar {
                        classifier 'sources'
                    }
                }
            }
        }
    }
}
